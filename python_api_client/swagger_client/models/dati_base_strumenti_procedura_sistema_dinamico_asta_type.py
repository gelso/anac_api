# coding: utf-8

"""
    Specifiche Servizi Appalto - OpenAPI 3.0

    Sono descritte le specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ufficio.uscp@anticorruzione.it
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DatiBaseStrumentiProceduraSistemaDinamicoAstaType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'sistema_dinamico_acquisizione': 'SistemaDinamicoAcquisizioneEnum',
        'asta_elettronica': 'bool'
    }

    attribute_map = {
        'sistema_dinamico_acquisizione': 'sistemaDinamicoAcquisizione',
        'asta_elettronica': 'astaElettronica'
    }

    def __init__(self, sistema_dinamico_acquisizione=None, asta_elettronica=None):  # noqa: E501
        """DatiBaseStrumentiProceduraSistemaDinamicoAstaType - a model defined in Swagger"""  # noqa: E501
        self._sistema_dinamico_acquisizione = None
        self._asta_elettronica = None
        self.discriminator = None
        if sistema_dinamico_acquisizione is not None:
            self.sistema_dinamico_acquisizione = sistema_dinamico_acquisizione
        if asta_elettronica is not None:
            self.asta_elettronica = asta_elettronica

    @property
    def sistema_dinamico_acquisizione(self):
        """Gets the sistema_dinamico_acquisizione of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501


        :return: The sistema_dinamico_acquisizione of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501
        :rtype: SistemaDinamicoAcquisizioneEnum
        """
        return self._sistema_dinamico_acquisizione

    @sistema_dinamico_acquisizione.setter
    def sistema_dinamico_acquisizione(self, sistema_dinamico_acquisizione):
        """Sets the sistema_dinamico_acquisizione of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.


        :param sistema_dinamico_acquisizione: The sistema_dinamico_acquisizione of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501
        :type: SistemaDinamicoAcquisizioneEnum
        """

        self._sistema_dinamico_acquisizione = sistema_dinamico_acquisizione

    @property
    def asta_elettronica(self):
        """Gets the asta_elettronica of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501

        Strumenti per lo svolgimento delle procedure. Ricorso all'asta elettronica - corrisponde al campo bt-767 - Electronic Auction del TED  # noqa: E501

        :return: The asta_elettronica of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501
        :rtype: bool
        """
        return self._asta_elettronica

    @asta_elettronica.setter
    def asta_elettronica(self, asta_elettronica):
        """Sets the asta_elettronica of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.

        Strumenti per lo svolgimento delle procedure. Ricorso all'asta elettronica - corrisponde al campo bt-767 - Electronic Auction del TED  # noqa: E501

        :param asta_elettronica: The asta_elettronica of this DatiBaseStrumentiProceduraSistemaDinamicoAstaType.  # noqa: E501
        :type: bool
        """

        self._asta_elettronica = asta_elettronica

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DatiBaseStrumentiProceduraSistemaDinamicoAstaType, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DatiBaseStrumentiProceduraSistemaDinamicoAstaType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
