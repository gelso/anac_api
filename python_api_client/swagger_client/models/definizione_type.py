# coding: utf-8

"""
    Specifiche Servizi Appalto - OpenAPI 3.0

    Sono descritte le specifiche dei servizi esposti dalla Piattaforma Contratti Pubblici (PCP), richiamabili dalle Stazioni Appaltanti, per la gestione e la raccolta delle informazioni rilevanti nei processi che compongono l’intero ciclo di vita degli appalti.    #### Documentazione   La documentazione a supporto delle specifiche di interfaccia con i sistemi che interoperano con il nuovo sistema di digitalizzazione è redatta con il linguaggio di markup Markdown ed è presente al segunete url:     [documento-specifiche-servizi-npa](https://github.com/anticorruzione/npa/blob/main/docs/specifiche-interfacce/documento-specifiche-servizi-npa.md) ```  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ufficio.uscp@anticorruzione.it
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DefinizioneType(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ulteriori_riserve': 'bool',
        'numero_riserve_definite': 'float',
        'numero_riserve_da_definire': 'float',
        'imp_totale_richiesto': 'float',
        'imp_totale_definizione': 'float'
    }

    attribute_map = {
        'ulteriori_riserve': 'ulterioriRiserve',
        'numero_riserve_definite': 'numeroRiserveDefinite',
        'numero_riserve_da_definire': 'numeroRiserveDaDefinire',
        'imp_totale_richiesto': 'impTotaleRichiesto',
        'imp_totale_definizione': 'impTotaleDefinizione'
    }

    def __init__(self, ulteriori_riserve=None, numero_riserve_definite=None, numero_riserve_da_definire=None, imp_totale_richiesto=None, imp_totale_definizione=None):  # noqa: E501
        """DefinizioneType - a model defined in Swagger"""  # noqa: E501
        self._ulteriori_riserve = None
        self._numero_riserve_definite = None
        self._numero_riserve_da_definire = None
        self._imp_totale_richiesto = None
        self._imp_totale_definizione = None
        self.discriminator = None
        if ulteriori_riserve is not None:
            self.ulteriori_riserve = ulteriori_riserve
        if numero_riserve_definite is not None:
            self.numero_riserve_definite = numero_riserve_definite
        if numero_riserve_da_definire is not None:
            self.numero_riserve_da_definire = numero_riserve_da_definire
        if imp_totale_richiesto is not None:
            self.imp_totale_richiesto = imp_totale_richiesto
        if imp_totale_definizione is not None:
            self.imp_totale_definizione = imp_totale_definizione

    @property
    def ulteriori_riserve(self):
        """Gets the ulteriori_riserve of this DefinizioneType.  # noqa: E501

        Ulteriori riserve definite o da definire con diversa modalità  # noqa: E501

        :return: The ulteriori_riserve of this DefinizioneType.  # noqa: E501
        :rtype: bool
        """
        return self._ulteriori_riserve

    @ulteriori_riserve.setter
    def ulteriori_riserve(self, ulteriori_riserve):
        """Sets the ulteriori_riserve of this DefinizioneType.

        Ulteriori riserve definite o da definire con diversa modalità  # noqa: E501

        :param ulteriori_riserve: The ulteriori_riserve of this DefinizioneType.  # noqa: E501
        :type: bool
        """

        self._ulteriori_riserve = ulteriori_riserve

    @property
    def numero_riserve_definite(self):
        """Gets the numero_riserve_definite of this DefinizioneType.  # noqa: E501

        Numero riserve definite  # noqa: E501

        :return: The numero_riserve_definite of this DefinizioneType.  # noqa: E501
        :rtype: float
        """
        return self._numero_riserve_definite

    @numero_riserve_definite.setter
    def numero_riserve_definite(self, numero_riserve_definite):
        """Sets the numero_riserve_definite of this DefinizioneType.

        Numero riserve definite  # noqa: E501

        :param numero_riserve_definite: The numero_riserve_definite of this DefinizioneType.  # noqa: E501
        :type: float
        """

        self._numero_riserve_definite = numero_riserve_definite

    @property
    def numero_riserve_da_definire(self):
        """Gets the numero_riserve_da_definire of this DefinizioneType.  # noqa: E501

        Numero riserve da definire  # noqa: E501

        :return: The numero_riserve_da_definire of this DefinizioneType.  # noqa: E501
        :rtype: float
        """
        return self._numero_riserve_da_definire

    @numero_riserve_da_definire.setter
    def numero_riserve_da_definire(self, numero_riserve_da_definire):
        """Sets the numero_riserve_da_definire of this DefinizioneType.

        Numero riserve da definire  # noqa: E501

        :param numero_riserve_da_definire: The numero_riserve_da_definire of this DefinizioneType.  # noqa: E501
        :type: float
        """

        self._numero_riserve_da_definire = numero_riserve_da_definire

    @property
    def imp_totale_richiesto(self):
        """Gets the imp_totale_richiesto of this DefinizioneType.  # noqa: E501

        Importo totale richiesto  # noqa: E501

        :return: The imp_totale_richiesto of this DefinizioneType.  # noqa: E501
        :rtype: float
        """
        return self._imp_totale_richiesto

    @imp_totale_richiesto.setter
    def imp_totale_richiesto(self, imp_totale_richiesto):
        """Sets the imp_totale_richiesto of this DefinizioneType.

        Importo totale richiesto  # noqa: E501

        :param imp_totale_richiesto: The imp_totale_richiesto of this DefinizioneType.  # noqa: E501
        :type: float
        """

        self._imp_totale_richiesto = imp_totale_richiesto

    @property
    def imp_totale_definizione(self):
        """Gets the imp_totale_definizione of this DefinizioneType.  # noqa: E501

        Importo totale eventuale definizione  # noqa: E501

        :return: The imp_totale_definizione of this DefinizioneType.  # noqa: E501
        :rtype: float
        """
        return self._imp_totale_definizione

    @imp_totale_definizione.setter
    def imp_totale_definizione(self, imp_totale_definizione):
        """Sets the imp_totale_definizione of this DefinizioneType.

        Importo totale eventuale definizione  # noqa: E501

        :param imp_totale_definizione: The imp_totale_definizione of this DefinizioneType.  # noqa: E501
        :type: float
        """

        self._imp_totale_definizione = imp_totale_definizione

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DefinizioneType, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DefinizioneType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
